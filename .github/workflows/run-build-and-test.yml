name: Build Test & Drop artifacts

on:
  push:
    branches:
     - poc-codesample


  pull_request:
    branches:
     - poc-codesample

  workflow_dispatch:

  schedule:
    - cron: '0 0 * * 0'

jobs:
  build-test-drop-artifacts:
    name: Build Test & Drop artifacts
    runs-on: self-hosted
    #runs-on: windows-latest
    
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      ProjectPath: './TestAPI/TestAPI/TestAPI.csproj'
      Configuration: 'Release'
      Solution: './TestAPI/TestAPI.sln'
      ArtifactName: 'drop'
      ArtifactPath: 'Build_artifacts'
      PathToTestCoverage: './DotnetTemplate.Tests/TestResults/coverage.info'
      AZURE_WEBAPP_NAME : 'saas-poc-app'
    
    
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: current location
        shell: pwsh
        run: |
         Set-Location -Path "C:\actions-runner\_work\DotnetTemplate\DotnetTemplate"
         #cd C:\actions-runner\_work\DotnetTemplate\DotnetTemplate
         Get-location
        
      #- name: Setup .NET 3.1 SDK
       # uses: actions/setup-dotnet@v3
        #with:
         # dotnet-version: 3.1.x

      - name: Nuget Restore
        shell: pwsh
        run: dotnet restore 
        #run: dotnet restore ${{ env.ProjectPath }}

      - name: Build Solution
        run: |
          dotnet build ${{ env.Solution }} --configuration ${{ env.Configuration }} /p:ContinuousIntegrationBuild=true 

    # - name: Build db
    # run: |
    # dotnet build ${{ env.dbSolution }} --configuration ${{ env.Configuration }} 

      - name: Run .NET Publish
        run: |
          dotnet publish ${{ env.ProjectPath }} --configuration ${{ env.Configuration }} --output ${{ env.ArtifactPath }}
      #          dotnet publish "WebAppPath/WebAppProject.csproj" -r "linux-x64" -o "project-linux-build/src" --self-contained

      - name: Drop Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ArtifactName }}
          path: ${{ env.ArtifactPath }}
          
      - name: Get Workflow ID
        id: get_workflow_id
        run: |
           echo "workflow_id: ${{ github.run_id }}"
     
      - name: Create Release       
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          token: ${{ secrets.MYPAT }}
          tag_name: ${{ steps.get_workflow_id.outputs.workflow_id }}
          release_name: Release ${{ steps.get_workflow_id.outputs.workflow_id }}
          #tag_name: ${{ github.ref }}
          #release_name: Release ${{ github.ref }}
          body: |
            This is the release notes for version ${{ github.ref }}.

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ArtifactPath }}
          asset_name: ${{ env.ArtifactName }}
          asset_content_type: application/zip
    
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          ==app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.ArtifactPath }}'
             
      - name: Deploy script to vm
        shell: pwsh
        run: |
          # winscp.com /command "open sftp://${{ secrets.VM_USERNAME  }}:${{ secrets.VM_PASSWORD  }}@${{ secrets.VM_HOSTNAME  }}/ -hostkey=*" "synchronize remote -delete ${{ env.ArtifactPath }} C:/poc/drop/" "exit"  
          winscp.com /command "option confirm off" "open sftp://${{ secrets.VM_USERNAME  }}:${{ secrets.VM_PASSWORD  }}@${{ secrets.VM_HOSTNAME  }}/ -hostkey=*" "put ${{ env.ArtifactPath }} C:/poc/drop/" "exit"
          
      - name: Deploy and sync app config 
        uses: azure/appconfiguration-sync@v1 
        with: 
          configurationFile: './TestAPI/TestAPI/appsettings.json' 
          format: 'json' 
          # Replace <ConnectionString> with the name of the secret in your                        
          # repository 
          connectionString: ${{ secrets.APPCONFIG_CONNECTIONSTRING }} 
          separator: ':' 
          


         
           

